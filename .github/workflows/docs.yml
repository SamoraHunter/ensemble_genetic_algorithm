# .github/workflows/docs.yml
name: Build and Deploy Docs

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write  # Changed to 'write' for Gitea push
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: Build Sphinx documentation
        run: sphinx-build -b html docs/source docs/build/html

      - name: Upload artifact for GitHub Pages
        if: github.server_url == 'https://github.com'
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs/build/html'

      - name: Upload artifact for Gitea
        if: github.server_url != 'https://github.com'
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/build/html

  deploy-github-pages:
    name: Deploy to GitHub Pages
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.server_url == 'https://github.com'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-gitea-pages:
    name: Deploy to Gitea Pages
    needs: build-docs
    runs-on: ubuntu-latest
    if: github.server_url != 'https://github.com'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: docs-html
          path: docs-html

      - name: Deploy to pages branch
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          # Create/checkout pages branch
          git checkout --orphan pages || git checkout pages
          
          # Remove old files
          git rm -rf . || true
          
          # Copy new files
          cp -r docs-html/* .
          
          # Commit and push
          git add .
          git commit -m "docs: Deploy documentation $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin pages --force